/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2206                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Make sure all utilities know specialised models
libs            (atmosphericModels);

application     pimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         2000;

deltaT          0.5;

writeControl    adjustable;

writeInterval   20;

purgeWrite      0;

writeFormat     binary;

writePrecision  12;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable false;

adjustTimeStep  no;

maxCo           1;

// ************************************************************************* //
MUIDomainName outerDomain;
MUIInterfaceName (interface);
MUIInterfaceNumber 1;

subIterationNumber	    1;

changeSubIter        no;
changeSubIterTime    0.0;
newSubIterationNumber	1;

functions
{
    myPlane
	{
	    type            MUICoupledSurfaces;
	    libs            (sampling);
	    writeControl    timeStep;
	    writeInterval   1;
	    surfaceFormat   vtk;
	    fields          (U);

	    interpolationScheme cellPoint;
	    MUIInterfaceID 0;
        writeIterfaceSurfaceFile  false ; // output the values of the interafce to a file. in the production run it should be false
            
	    //formatOptions
	//	{
	//	    vtk
	//	    {
	//	        precision  10;
	//	    }
	//	}
        
	    MUICoupledSurfaces
	    {
		wPlane
		{
		    type        plane;
		    point       (-3000 -3000 0.0);
		    normal      (1 0 0);
		    interpolate true;
		}
		
		ePlane
		{
		    type        plane;
		    point       (3000 3000 0.0);
		    normal      (1 0 0);
		    interpolate true;
		}
		
		nPlane
		{
		    type        plane;
		    point       (3000 3000 0.0);
		    normal      (0 1 0);
		    interpolate true;
		}
		
		sPlane
		{
		    type        plane;
		    point       (-3000 -3000 0.0);
		    normal      (0 1 0);
		    interpolate true;
		}
		
		
		
	    }
	}
	
	
}

