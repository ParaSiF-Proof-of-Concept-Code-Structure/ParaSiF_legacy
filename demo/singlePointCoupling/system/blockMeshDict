/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// General m4 macros









// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// User-defined parameters

convertToMeters 1;

      // Length of tank (x-direction)
       // Breadth of tank (y-direction)
       // Depth of tank (z-direction)

      // Depth to the top (height) of lower chamfer
     // Height of upper chamfer

 // Angle of lower chamfer to the horizontal
 // Angle of upper chamfer to the horizontal

  // Centre of gravity in y-direction
         // Centre of gravity in z-direction

       // Number of cells in the length (1 for 2D)
      // Number of cells in the breadth
     // Number of cells in the height of the lower champfer
      // Number of cells in the height between the chamfers
    // Number of cells in the height of the upper champfer

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// Derived parameters

 // Breadth to the top (height) of lower chamfer
 // Breadth of upper chamfer


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// Parametric description
x0      0;
y0      0;
z0      0;

L       0.1;
H       0.05;
d       0.03;

vertices
(
  ($x0 $y0 $z0) // Vertex bllcb = 0
  ($L  $y0 $z0)  // Vertex bllc = 1
  ($L  $H  $z0) // Vertex bllcb = 2
  ($x0 $H  $z0)  // Vertex bllc = 3

  ($x0 $y0 $d) // Vertex bllcb = 4
  ($L  $y0 $d)  // Vertex bllc = 5
  ($L  $H  $d) // Vertex bllcb = 6
  ($x0 $H  $d)  // Vertex bllc = 7





);

blocks
(
    // block0
    hex (0 1 2 3 4 5 6 7)    (60 30 18)    simpleGrading (1 1 1)

);

boundary
(
    walls
    {
        type wall;
        faces
        (
          (0 3 7 4)
          (0 4 5 1)
          (1 5 6 2)
          (3 2 6 7)
          (0 1 2 3)
          (4 7 6 5)
        );
    }
);
// patches
// (
//     patch walls
//     (
//         (0 3 7 4)
//         (0 4 5 1)
//         (1 5 6 2)
//         (3 2 6 7)
//         (0 1 2 3)
//         (4 7 6 5)
//     )

    // empty front
    // (
    //     (0 1 2 3)
    // )
    //
    // empty back
    // (
    //     (4 7 6 5)
    // )
// );

// ************************************************************************* //
