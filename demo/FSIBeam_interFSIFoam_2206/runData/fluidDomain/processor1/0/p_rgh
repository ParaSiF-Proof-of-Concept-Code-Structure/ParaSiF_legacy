/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2206                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    arch        "LSB;label=32;scalar=64";
    class       volScalarField;
    location    "0";
    object      p_rgh;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 -1 -2 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    inlet
    {
        type            fixedFluxPressure;
        gradient        nonuniform List<scalar> 0();
        value           nonuniform List<scalar> 0();
    }
    outlet
    {
        type            fixedFluxPressure;
        gradient        nonuniform List<scalar> 0();
        value           nonuniform List<scalar> 0();
    }
    top
    {
        type            totalPressure;
        rho             rho;
        psi             none;
        gamma           1;
        p0              uniform 0;
        value           uniform 0;
    }
    bottom
    {
        type            fixedFluxPressure;
        gradient        nonuniform List<scalar> 0();
        value           nonuniform List<scalar> 0();
    }
    left
    {
        type            fixedFluxPressure;
        gradient        uniform 0;
        value           uniform 0;
    }
    symmetry
    {
        type            symmetryPlane;
    }
    interface
    {
        type            fixedFluxPressure;
        gradient        uniform 0;
        value           uniform 0;
    }
    procBoundary1to0
    {
        type            processor;
        value           uniform 0;
    }
    procBoundary1to2
    {
        type            processor;
        value           uniform 0;
    }
    procBoundary1to3
    {
        type            processor;
        value           uniform 0;
    }
}


// ************************************************************************* //
